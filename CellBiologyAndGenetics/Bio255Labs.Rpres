The Bio 255 Labs at Macalester
========================================================
author: Using R as a scientific tool
date: Danny Kaplan Feb. 11, 2014

```{r include=FALSE}
require(knitr)
library(dplyr)
library(ggplot2)
library(mosaic)
library(tidyr)
opts_chunk$set( tidy=FALSE, messages=FALSE, warnings=FALSE )
options( width=80 )
```

The Biology Courses
========================================================

## BIOL 260  --- Genetics

An introduction to the principles of genetics, including topics from classical Mendalian concepts to the contemporary molecular biology of the gene. Three lecture hours per week.

## BIOL 265 --- Cell Biology

An introduction to the molecular and cellular processes of living organisms. Special attention is paid to problems faced by living cells in the acquisition of energy, growth and repair, reproduction and communication with other cells. Recent advances in biotechnology are also discussed.Three lecture hours.

### Both courses share a lab.


========================================================
title: none

## BIOL 255 - CELL BIOLOGY AND GENETICS 
## LABORATORY METHODS

An intensive exploration of eukaryotic and prokaryotic cell structure, chemistry, and function with an emphasis on laboratory methods, data analysis, and experimental design. Using the same tools used to advance our understanding of modern cell biology and genetics, this lab requires students to become familiar with a mixture of biochemical, cytological, and genetic techniques as they develop testable hypothesis related to topics such as enzyme function, inheritance patterns, genome structure and gene expression, and cell-to-cell signaling.

Link to publicly available lab materials: <http://paulyeo21.github.io/cell_bio_gen_lab/lab_docs.html>   

Lab Schedule
=======================================================

Week 1: Graphing Data and Statistical Analysis    
Week 2: Solutions and DNA Gel Electrophoresis    
Week 3: Fluorescence/ Spectroscopy    
Week 4: Microscopy    
Week 5: Bioinformatics    
Week 6: Introduction to β-Galactosidase System in Escherichia coli    
Week 7: Laboratory Exam    
Week 8: Induction to β-Galactosidase System in Escherichia coli    
Week 9:  Oral Presentations for Week 6   
Week 10: Roundup Ready-Looking for a Gene: Background and Bioinformatics    
Week 11: Roundup Ready Lab: DNA extraction and PCR    
Week 12: Roundup Ready Lab: Run and analyze DNA gel    
Week 13: Senior Student Presentations

Objectives of this talk
===============================================
title: none

One possibility for what an R-based lab can look like.

* Students hired under our HHMI grant as Stats Fellows
* Most of a summer dedicated to producing these materials.
* **I did not participate** in creating these labs.
    * General consultant and trouble-shooter. (I'm the R guru on campus.)
    * I did help create an R ecosystem that got the students going.
    
 
        
Lab authors: Cory Stern, Paul Yeo, Paul Overvoorde, 

R-related elements of the labs
===========================================
    
* Lab write-ups as Markdown documents
    * Markdown: A light-weight, easy to learn notation.
    * Integrates and documents each step in the data analysis.
* Tutorials: Video and interactive
* Lab activities in R


Week I: Basic Lab Skills: Graphing and Statistics
===========================================

Work with data from a cell culture and poliferation assay.

To quote from the lab ...

===========================================
title: none

1. Breast and colon cancer cell lines were cultured separately in a 96-well plate at a known and constant density.
2. Cells were then incubated in the presence of either vehicle or varying concentrations of LPA. (Note: What is meant by a vehicle in molecular biology?)
3. Reagents were replenished daily.
4. After three days, CellTiter 96 AQueous (MTS) One Solution reagent (Promega) was added to each well, and absorbance was recorded at 490 nm by using a SpectraMax Plus plate reader (softmaxpro 401, Molecular Devices).
5. Cell numbers were then calculated by using a standard curve correlating the absorbance to the cell number counted under a microscope.
6. Multiple trials (A-H) were done with each cell line.

The data
=============================

![cell proliferation data](proliferation-data.png)

* Later ... comments on why statistics students should know more about data organization than this.

=============================
title: none

Using the raw data and the information below, do the following:

1. Prepare a spreadsheet of the data ... Read the data into R. Use R to show your data frame, its dimension, and the names of your experimental groups.    
2. Find the mean and standard deviation of each experimental group, using R for the calculations. What are the experimental groups for this assignment? Are there 2 (colon and breast) or are there 12 (one for each column)?    
3. Give clearly labeled and clearly presented graph(s) of this study.    
    * Graphs should be suitable for publication in a scientific journal. Therefore they must include all information necessary for understanding the context of the plot: informative title, axes labels, figure legend (caption).
4. In a separate paragraph, clearly explain your rationale for the choice of the type(s) of graphs you made (scatterplot, boxplot, line graph, etc).    



=============================
title: none

Enter the data with proper variable names
```{r}
CellNumbers <- read.csv("CellProliferationData.csv", skip=1 )
```

```{r echo=FALSE}
names(CellNumbers) <- c("rep", paste0( rep(c("Colon","Breast"), each=6), 1:6))
```

```{r echo=FALSE}
CellNumbers[1:5,c(1:3,8:10)]
```

===============================
title: none

### Means of groups

A very direct approach: 
```{r}
mean(Colon1, data=CellNumbers)
mean(Colon2, data=CellNumbers)
```

Are there 8 cases and 12 variables? Or 96 cases?

A more general format is with 96 cases

* applicable to any layout of cells
* much easier to process

96 cases
==================================

Students could have entered the data this way in the first place.

But it's straightforward to do automatically.  Students would need a template.

* Make and read in  a second file with column explanations.
```{r eval=FALSE}
Columns <- read.csv("ColumnExplanations.csv")
```

```{r echo=FALSE}
conc <- rep( c(0, 0.05, 0.10, 0.5, 1.0, 2), 2)
celltype <- rep( c("Colon","Breast"), each=6)
Columns <- data.frame(column=c(names(CellNumbers)[-1]),
                      type=celltype,
                      conc=conc)
head(Columns)
```
and so on.                     

Reformat count data into "narrow" format
====================================

```{r}
Narrow <- gather(CellNumbers, 
                 key="column", value="count", 
                 Colon1:Breast6)
```
```{r}
Narrow 
```

Join with the column information
==============================

```{r}
ReadyToUse <- inner_join( Narrow, Columns)
```
```{r echo=FALSE}
sample_n(ReadyToUse, size=8) %>%
  arrange(conc, column)
```

Statistical Tasks
==============================

Mean and sd of each experimental group
```{r}
mean(count ~ type, data = ReadyToUse)
sd(  count ~ type, data = ReadyToUse)
```

Or, by both type and concentration:
====================

```{r eval=FALSE}
mean(count ~ type + conc, data = ReadyToUse)
```
```{r echo=FALSE}
mean(count ~ type + conc, data = ReadyToUse) %>% head(4)
```
```{r eval=FALSE}
sd(  count ~ type + conc, data = ReadyToUse)
```
```{r echo=FALSE}
sd(  count ~ type + conc, data = ReadyToUse) %>% head(4)
```

Statistical Tasks
===========================

Give clearly labeled graph of this study

```{r}

bwplot(count ~ cross(type, conc), data = ReadyToUse, 
       fill="grey", xlab="Cell type and concentration (μM)",
       ylab="Cell Count")
```

Or, even more professionally
====================================

```{r}
ggplot(data=ReadyToUse, 
       aes(x=as.factor(conc), y=count)) +
  geom_boxplot() + 
  geom_point(alpha=.5, size=2) +
  facet_wrap( ~ type ) + xlab("Concentration (μM)") + 
  ylab("Cell Count")
```

Or, with inference built in
=====================================

```{r}
ggplot(data=ReadyToUse, aes(x=as.factor(conc), y=count)) +
  geom_boxplot(notch = TRUE) + 
  geom_point(alpha=.5, size=2) +
  facet_wrap( ~ type )
```

